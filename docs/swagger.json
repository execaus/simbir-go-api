{
    "swagger": "2.0",
    "info": {
        "description": "API for transportation rental service",
        "title": "SimbirGoAPI",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/api/",
    "paths": {
        "/Account/Me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the full data of the request author.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAccountOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Account/SignIn": {
            "post": {
                "description": "Generates and returns a new jwt user token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Authorization",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignInOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Account/SignOut": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Blocks the authorization token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Account logout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Account/SignUp": {
            "post": {
                "description": "Registers a new user and returns the authorization token jwt.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignUpOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Account/Update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates account data and returns a new authorization token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Update account",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAccountOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Account": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of accounts by sampling condition.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-account"
                ],
                "summary": "Accounts information",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "-",
                        "name": "start",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetAccountsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Account/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creating a new account by the administrator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-account"
                ],
                "summary": "Create account",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateAccountOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Account/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns account information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-account"
                ],
                "summary": "Account information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetAccountOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Account administrator changes account by username.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-account"
                ],
                "summary": "Update account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateAccountOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deleting account by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-account"
                ],
                "summary": "Delete account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Rent": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new rent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "Create rent",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateRentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Rent/End/{id}": {
            "post": {
                "description": "Completion of the lease of transportation under the lease id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "End rent",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminEndRentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminEndRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Rent/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Return rent information by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "Rent information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Changing a lease record by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "Update rent",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateRentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting rental information by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "Delete rent",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Transport": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Getting list information about transport.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-transport"
                ],
                "summary": "Get transport list",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "-",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "-",
                        "name": "transportType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetTransportsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adding new transportation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-transport"
                ],
                "summary": "Create transport",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateTransportInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminCreateTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/Transport/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Getting information about transport by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-transport"
                ],
                "summary": "Get transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update transport by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-transport"
                ],
                "summary": "Update transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateTransportInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminUpdateTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deleting vehicles by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-transport"
                ],
                "summary": "Delete transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/TransportHistory/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Return transport rent history by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "Transport rent history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetTransportHistoryOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Admin/UserHistory/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Return user rent history by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin-rent"
                ],
                "summary": "User rent history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminGetUserHistoryOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Payment/Hesoyam/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds 250,000 cash units to the balance of the account with id={accountId}..",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Hesoyam",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentHesoyamUserOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/End/{id}": {
            "post": {
                "description": "Completion of the rent of transport under the rent id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "End rent",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EndRentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EndRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/MyHistory": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the rental history of the current account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "Account rent history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRentsOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/New/{id}": {
            "post": {
                "description": "Renting the transport for personal use.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "Create rent",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetRentTransportNewInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRentTransportNewOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/Transport": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Getting transport available for rent by parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "Get transport list",
                "parameters": [
                    {
                        "type": "number",
                        "description": "-",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "-",
                        "name": "long",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "-",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "-",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRentTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/TransportHistory/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the transport rental history.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "Transport rent history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRentTransportHistoryOutput"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Rent/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Return rent by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rent"
                ],
                "summary": "Rent information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRentOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Transport": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adding new transportation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Create transport",
                "parameters": [
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTransportInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/Transport/{id}": {
            "get": {
                "description": "Getting information about transport by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Get transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update transport by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Update transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "-",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTransportInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTransportOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deleting vehicles by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Delete transport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "-",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "410": {
                        "description": "Gone",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AdminCreateAccountInput": {
            "type": "object",
            "required": [
                "balance",
                "isAdmin",
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number",
                    "minimum": 0
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AdminCreateAccountOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.GetAccountOutput"
                }
            }
        },
        "models.AdminCreateRentInput": {
            "type": "object",
            "required": [
                "priceOfUnit",
                "priceType",
                "timeStart",
                "transportId",
                "userId"
            ],
            "properties": {
                "priceOfUnit": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string"
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transportId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.AdminCreateRentOutput": {
            "type": "object",
            "properties": {
                "rent": {
                    "$ref": "#/definitions/models.AdminGetRentOutput"
                }
            }
        },
        "models.AdminCreateTransportInput": {
            "type": "object",
            "required": [
                "canBeRented",
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "ownerId",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "minutePrice": {
                    "type": "number",
                    "minimum": 1
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "models.AdminCreateTransportOutput": {
            "type": "object",
            "properties": {
                "transport": {
                    "$ref": "#/definitions/models.GetTransportOutput"
                }
            }
        },
        "models.AdminEndRentInput": {
            "type": "object",
            "required": [
                "lat",
                "long"
            ],
            "properties": {
                "lat": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                }
            }
        },
        "models.AdminEndRentOutput": {
            "type": "object",
            "properties": {
                "rent": {
                    "$ref": "#/definitions/models.AdminGetRentOutput"
                }
            }
        },
        "models.AdminGetAccountOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.GetAccountOutput"
                },
                "isDeleted": {
                    "type": "boolean"
                }
            }
        },
        "models.AdminGetAccountsOutput": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetAccountOutput"
                    }
                }
            }
        },
        "models.AdminGetRentOutput": {
            "type": "object",
            "properties": {
                "isDeleted": {
                    "type": "boolean"
                },
                "rent": {
                    "$ref": "#/definitions/models.GetRentOutput"
                }
            }
        },
        "models.AdminGetTransportHistoryOutput": {
            "type": "object",
            "properties": {
                "rents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AdminGetRentOutput"
                    }
                }
            }
        },
        "models.AdminGetTransportOutput": {
            "type": "object",
            "properties": {
                "isDeleted": {
                    "type": "boolean"
                },
                "transport": {
                    "$ref": "#/definitions/models.GetTransportOutput"
                }
            }
        },
        "models.AdminGetTransportsOutput": {
            "type": "object",
            "properties": {
                "transports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AdminGetTransportOutput"
                    }
                }
            }
        },
        "models.AdminGetUserHistoryOutput": {
            "type": "object",
            "properties": {
                "rents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AdminGetRentOutput"
                    }
                }
            }
        },
        "models.AdminUpdateAccountInput": {
            "type": "object",
            "required": [
                "balance",
                "isAdmin",
                "password",
                "username"
            ],
            "properties": {
                "balance": {
                    "type": "number",
                    "minimum": 0
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AdminUpdateAccountOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.GetAccountOutput"
                }
            }
        },
        "models.AdminUpdateRentInput": {
            "type": "object",
            "required": [
                "priceOfUnit",
                "priceType",
                "timeStart",
                "transportId",
                "userId"
            ],
            "properties": {
                "priceOfUnit": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string"
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transportId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.AdminUpdateRentOutput": {
            "type": "object",
            "properties": {
                "rent": {
                    "$ref": "#/definitions/models.AdminGetRentOutput"
                }
            }
        },
        "models.AdminUpdateTransportInput": {
            "type": "object",
            "required": [
                "canBeRented",
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "ownerId",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "minutePrice": {
                    "type": "number",
                    "minimum": 1
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "models.AdminUpdateTransportOutput": {
            "type": "object",
            "properties": {
                "transport": {
                    "$ref": "#/definitions/models.GetTransportOutput"
                }
            }
        },
        "models.CreateTransportInput": {
            "type": "object",
            "required": [
                "canBeRented",
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model",
                "transportType"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "minutePrice": {
                    "type": "number",
                    "minimum": 1
                },
                "model": {
                    "type": "string"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "models.CreateTransportOutput": {
            "type": "object",
            "properties": {
                "transport": {
                    "$ref": "#/definitions/models.GetTransportOutput"
                }
            }
        },
        "models.EndRentInput": {
            "type": "object",
            "required": [
                "lat",
                "long"
            ],
            "properties": {
                "lat": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "long": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                }
            }
        },
        "models.EndRentOutput": {
            "type": "object",
            "properties": {
                "rent": {
                    "$ref": "#/definitions/models.GetRentOutput"
                }
            }
        },
        "models.GetAccountOutput": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.GetRentOutput": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "account": {
                    "type": "integer"
                },
                "finalPrice": {
                    "type": "number"
                },
                "priceType": {
                    "type": "string"
                },
                "priceUnit": {
                    "type": "number"
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "transport": {
                    "type": "integer"
                }
            }
        },
        "models.GetRentTransportHistoryOutput": {
            "type": "object",
            "properties": {
                "rents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetRentOutput"
                    }
                }
            }
        },
        "models.GetRentTransportNewInput": {
            "type": "object",
            "properties": {
                "rentType": {
                    "type": "string"
                }
            }
        },
        "models.GetRentTransportNewOutput": {
            "type": "object",
            "properties": {
                "rent": {
                    "$ref": "#/definitions/models.GetRentOutput"
                }
            }
        },
        "models.GetRentTransportOutput": {
            "type": "object",
            "properties": {
                "transports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetTransportOutput"
                    }
                }
            }
        },
        "models.GetRentsOutput": {
            "type": "object",
            "properties": {
                "rents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetRentOutput"
                    }
                }
            }
        },
        "models.GetTransportOutput": {
            "type": "object",
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "minutePrice": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "transportType": {
                    "type": "string"
                }
            }
        },
        "models.PaymentHesoyamAdminOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.AdminGetAccountOutput"
                }
            }
        },
        "models.PaymentHesoyamUserOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.GetAccountOutput"
                }
            }
        },
        "models.SignInInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SignInOutput": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.SignUpInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SignUpOutput": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAccountInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAccountOutput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.GetAccountOutput"
                }
            }
        },
        "models.UpdateTransportInput": {
            "type": "object",
            "required": [
                "canBeRented",
                "color",
                "identifier",
                "latitude",
                "longitude",
                "model"
            ],
            "properties": {
                "canBeRented": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "dayPrice": {
                    "type": "number",
                    "minimum": 1
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "minutePrice": {
                    "type": "number",
                    "minimum": 1
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "models.UpdateTransportOutput": {
            "type": "object",
            "properties": {
                "transport": {
                    "$ref": "#/definitions/models.GetTransportOutput"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}