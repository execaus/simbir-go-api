basePath: /api/
definitions:
  handler.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  models.AdminCreateAccountInput:
    properties:
      balance:
        minimum: 0
        type: number
      isAdmin:
        type: boolean
      password:
        type: string
      username:
        type: string
    required:
    - balance
    - isAdmin
    - password
    - username
    type: object
  models.AdminCreateAccountOutput:
    properties:
      account:
        $ref: '#/definitions/models.GetAccountOutput'
    type: object
  models.AdminCreateTransportInput:
    properties:
      canBeRented:
        type: boolean
      color:
        type: string
      dayPrice:
        minimum: 1
        type: number
      description:
        type: string
      identifier:
        type: string
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longitude:
        maximum: 180
        minimum: -180
        type: number
      minutePrice:
        minimum: 1
        type: number
      model:
        type: string
      ownerId:
        type: string
      transportType:
        type: string
    required:
    - canBeRented
    - color
    - identifier
    - latitude
    - longitude
    - model
    - ownerId
    - transportType
    type: object
  models.AdminCreateTransportOutput:
    properties:
      transport:
        $ref: '#/definitions/models.GetTransportOutput'
    type: object
  models.AdminGetAccountOutput:
    properties:
      account:
        $ref: '#/definitions/models.GetAccountOutput'
      isDeleted:
        type: boolean
    type: object
  models.AdminGetAccountsOutput:
    properties:
      accounts:
        items:
          $ref: '#/definitions/models.GetAccountOutput'
        type: array
    type: object
  models.AdminGetTransportOutput:
    properties:
      isDeleted:
        type: boolean
      transport:
        $ref: '#/definitions/models.GetTransportOutput'
    type: object
  models.AdminGetTransportsOutput:
    properties:
      transports:
        items:
          $ref: '#/definitions/models.AdminGetTransportOutput'
        type: array
    type: object
  models.AdminUpdateAccountInput:
    properties:
      balance:
        minimum: 0
        type: number
      isAdmin:
        type: boolean
      password:
        type: string
      username:
        type: string
    required:
    - balance
    - isAdmin
    - password
    - username
    type: object
  models.AdminUpdateAccountOutput:
    properties:
      account:
        $ref: '#/definitions/models.GetAccountOutput'
    type: object
  models.AdminUpdateTransportInput:
    properties:
      canBeRented:
        type: boolean
      color:
        type: string
      dayPrice:
        minimum: 1
        type: number
      description:
        type: string
      identifier:
        type: string
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longitude:
        maximum: 180
        minimum: -180
        type: number
      minutePrice:
        minimum: 1
        type: number
      model:
        type: string
      ownerId:
        type: string
      transportType:
        type: string
    required:
    - canBeRented
    - color
    - identifier
    - latitude
    - longitude
    - model
    - ownerId
    - transportType
    type: object
  models.AdminUpdateTransportOutput:
    properties:
      transport:
        $ref: '#/definitions/models.GetTransportOutput'
    type: object
  models.CreateTransportInput:
    properties:
      canBeRented:
        type: boolean
      color:
        type: string
      dayPrice:
        minimum: 1
        type: number
      description:
        type: string
      identifier:
        type: string
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longitude:
        maximum: 180
        minimum: -180
        type: number
      minutePrice:
        minimum: 1
        type: number
      model:
        type: string
      transportType:
        type: string
    required:
    - canBeRented
    - color
    - identifier
    - latitude
    - longitude
    - model
    - transportType
    type: object
  models.CreateTransportOutput:
    properties:
      transport:
        $ref: '#/definitions/models.GetTransportOutput'
    type: object
  models.GetAccountOutput:
    properties:
      balance:
        type: number
      isAdmin:
        type: boolean
      username:
        type: string
    type: object
  models.GetRentOutput:
    properties:
      ID:
        type: integer
      account:
        type: string
      priceType:
        type: string
      priceUnit:
        type: number
      timeEnd:
        type: string
      timeStart:
        type: string
      transport:
        type: string
    type: object
  models.GetRentTransportOutput:
    properties:
      transports:
        items:
          $ref: '#/definitions/models.GetTransportOutput'
        type: array
    type: object
  models.GetTransportOutput:
    properties:
      canBeRented:
        type: boolean
      color:
        type: string
      dayPrice:
        type: number
      description:
        type: string
      identifier:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      minutePrice:
        type: number
      model:
        type: string
      ownerId:
        type: string
      transportType:
        type: string
    type: object
  models.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.SignInOutput:
    properties:
      token:
        type: string
    type: object
  models.SignUpInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.SignUpOutput:
    properties:
      token:
        type: string
    type: object
  models.UpdateAccountInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.UpdateAccountOutput:
    properties:
      token:
        type: string
    type: object
  models.UpdateTransportInput:
    properties:
      canBeRented:
        type: boolean
      color:
        type: string
      dayPrice:
        minimum: 1
        type: number
      description:
        type: string
      identifier:
        type: string
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longitude:
        maximum: 180
        minimum: -180
        type: number
      minutePrice:
        minimum: 1
        type: number
      model:
        type: string
    required:
    - canBeRented
    - color
    - identifier
    - latitude
    - longitude
    - model
    type: object
  models.UpdateTransportOutput:
    properties:
      transport:
        $ref: '#/definitions/models.GetTransportOutput'
    type: object
info:
  contact: {}
  description: API for transportation rental service
  title: SimbirGoAPI
  version: 1.0.0
paths:
  /Account/Me:
    get:
      consumes:
      - application/json
      description: Returns the full data of the request author.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAccountOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Account information
      tags:
      - account
  /Account/SignIn:
    post:
      consumes:
      - application/json
      description: Generates and returns a new jwt user token.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignInOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Authorization
      tags:
      - account
  /Account/SignOut:
    post:
      consumes:
      - application/json
      description: Blocks the authorization token.
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Account logout
      tags:
      - account
  /Account/SignUp:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns the authorization token jwt.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignUpOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Registration
      tags:
      - account
  /Account/Update:
    put:
      consumes:
      - application/json
      description: Updates account data and returns a new authorization token.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAccountInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateAccountOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Update account
      tags:
      - account
  /Admin/Account:
    get:
      consumes:
      - application/json
      description: Returns a list of accounts by sampling condition.
      parameters:
      - description: '-'
        in: query
        name: count
        required: true
        type: number
      - description: '-'
        in: query
        name: start
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminGetAccountsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Accounts information
      tags:
      - admin-account
  /Admin/Account/:
    post:
      consumes:
      - application/json
      description: Creating a new account by the administrator.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AdminCreateAccountInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminCreateAccountOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Create account
      tags:
      - admin-account
  /Admin/Account/{id}:
    delete:
      consumes:
      - application/json
      description: Deleting account by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Delete account
      tags:
      - admin-account
    get:
      consumes:
      - application/json
      description: Returns account information.
      parameters:
      - description: '-'
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminGetAccountOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Account information
      tags:
      - admin-account
    put:
      consumes:
      - application/json
      description: Account administrator changes account by username.
      parameters:
      - description: '-'
        in: path
        name: username
        required: true
        type: string
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AdminUpdateAccountInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminUpdateAccountOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Update account
      tags:
      - admin-account
  /Admin/Transport:
    get:
      consumes:
      - application/json
      description: Getting list information about transport.
      parameters:
      - description: '-'
        in: query
        name: count
        required: true
        type: number
      - description: '-'
        in: query
        name: start
        required: true
        type: number
      - description: '-'
        in: query
        name: transportType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminGetTransportsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Get transport list
      tags:
      - admin-transport
    post:
      consumes:
      - application/json
      description: Adding new transportation.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AdminCreateTransportInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminCreateTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Create transport
      tags:
      - admin-transport
  /Admin/Transport/{id}:
    delete:
      consumes:
      - application/json
      description: Deleting vehicles by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Delete transport
      tags:
      - admin-transport
    get:
      consumes:
      - application/json
      description: Getting information about transport by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminGetTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Get transport
      tags:
      - admin-transport
    put:
      consumes:
      - application/json
      description: Update transport by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AdminUpdateTransportInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminUpdateTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Update transport
      tags:
      - admin-transport
  /Rent/{id}:
    get:
      consumes:
      - application/json
      description: Return rent by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetRentOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Rent information
      tags:
      - rent
  /Rent/Transport:
    get:
      consumes:
      - application/json
      description: Getting transport available for rent by parameters.
      parameters:
      - description: '-'
        in: query
        name: lat
        required: true
        type: number
      - description: '-'
        in: query
        name: long
        required: true
        type: number
      - description: '-'
        in: query
        name: radius
        required: true
        type: number
      - description: '-'
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetRentTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Get transport list
      tags:
      - rent
  /Transport:
    post:
      consumes:
      - application/json
      description: Adding new transportation.
      parameters:
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateTransportInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Create transport
      tags:
      - transport
  /Transport/{id}:
    delete:
      consumes:
      - application/json
      description: Deleting vehicles by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Delete transport
      tags:
      - transport
    get:
      consumes:
      - application/json
      description: Getting information about transport by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transport
      tags:
      - transport
    put:
      consumes:
      - application/json
      description: Update transport by id.
      parameters:
      - description: '-'
        in: path
        name: id
        required: true
        type: string
      - description: '-'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTransportInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateTransportOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - BearerAuth: []
      summary: Update transport
      tags:
      - transport
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
