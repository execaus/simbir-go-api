// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package queries

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO "Account" (username, password, "isAdmin", balance)
VALUES ($1, $2, $3, $4)
RETURNING username, password, "isAdmin", balance
`

type CreateAccountParams struct {
	Username string
	Password string
	IsAdmin  bool
	Balance  float64
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.Username,
		arg.Password,
		arg.IsAdmin,
		arg.Balance,
	)
	var i Account
	err := row.Scan(
		&i.Username,
		&i.Password,
		&i.IsAdmin,
		&i.Balance,
	)
	return i, err
}

const isAccountExist = `-- name: IsAccountExist :one
SELECT EXISTS (
  SELECT 1
  FROM "Account"
  WHERE username=$1
)
`

func (q *Queries) IsAccountExist(ctx context.Context, username string) (bool, error) {
	row := q.db.QueryRowContext(ctx, isAccountExist, username)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
